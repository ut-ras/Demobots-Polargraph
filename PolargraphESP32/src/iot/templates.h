#ifndef TEMPLATES_H
#define TEMPLATES_H

#include <pgmspace.h>

/* HTML Templates
 *
 * The original .html files are in "PolargraphESP32/static"
 *
 * Escape the HTML, mostly double quotes " (Search online c++ escape tool)
 * If you don't want to compress to one line, you can separate the lines of a string literal with \
 * I reccommend minifying javascript and html to reduce buffer size (search js minifying tools), and debugging the front end from a static html page
 * Need to know a maximum buffer size, instead of using the heap
 * If you need to add variables (like html templating), you can use snprintf
 *
 */

#define INDEX_LITERAL "<!DOCTYPE html><html><head lang=\"en\"><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /><title>Demobots Polargraph</title></head><body style=\"width:auto; font-family:'Arial'; background-color:#1d1f21; color:#c5c8c6; padding:1em;\"><h1>Demobots Polargraph</h1><div style=\"border: 1px solid; margin:1em 0em; padding:0em 1em; min-width:12em; width:fit-content;\"><div id=\"div_input_coorinate\" style=\"padding:0em 1em 0em 0em;\"><h3>Input Coordinates</h3><input id=\"input_coorinate\" type=\"text\" placeholder=\"(x1,y1)(x2,y2)(x3,y3)\" ></div><div id=\"div_btn_control\" style=\"padding:1em 0em;\"><button id=\"btn_start\">Start</button><button id=\"btn_stop\">Stop</button><button id=\"btn_zero\">Zero</button></div></div><div id=\"dev_device_info\" style=\"margin:1em 0em; padding:0em 1em; border: 1px solid; min-width:12em; width:fit-content;\"><h3>Device Status</h3><button id=\"btn_get_state\">Get State</button><p>Last State:</p><p id=\"last_state\"></p><p>Last Config:</p><p id=\"last_config\"></p></div><div id=\"svg_input\" style=\"border: 1px solid; padding:1em; min-width:20em; width:fit-content;\"><h3 style=\"margin:0.5em 0em;\">SVG Input</h3><div style=\"padding:0.2em 0em;\"><label for=\"svgfile\">Choose svg file to upload</label><input type=\"file\" id=\"svgfile\" name=\"svgfile\" accept=\".svg\"></div><div style=\"padding:0.2em 0em;\"><label for=\"svg_scale\">Scale SVG</label><input id=\"svg_scale\" type=\"number\" placeholder=\"1\" value=\"1\" style=\"width:3em;\" ><label for=\"dist_btwn\">Distance Between Points</label><input id=\"dist_btwn\" type=\"number\" placeholder=\"2\" value=\"2\" size=\"2\" style=\"width:3em;\" ></div><div style=\"padding:0.2em 0em;\"><button disabled id=\"btn_load_svg\">Read SVG</button><button disabled id=\"btn_reset_svg\" onClick=\"window.location.reload();\">Reset SVG</button></div><div style=\"padding:0.2em 0em;\"><button disabled id=\"btn_start_svg\">Start Drawing</button></div></div><div hidden id=\"coordinate_display\" ><div><h3>Original SVG object</h3><div id=\"svg_container\"><svg id=\"svg_obj\" width=\"900\" height=\"50\" style=\"border: 1px solid;\"></svg></div></div><h3>Polargraph Display</h3><canvas id=\"svg_canvas\" width=\"900\" height=\"560\" style=\"border:1px solid;\"> </canvas><div style=\"border: 1px solid; padding:0em 1em; max-width:900px; \"><p id=\"num_coords\">Number of coordinates: 0</p><p id=\"x_list\" style=\"overflow-wrap: break-word; word-wrap: break-word;\">X: </p><p id=\"y_list\" style=\"overflow-wrap: break-word; word-wrap: break-word;\">Y: </p></div></div><script>var last_config={},last_state={},btn_start=document.getElementById(\"btn_start\"),btn_stop=document.getElementById(\"btn_stop\"),btn_zero=document.getElementById(\"btn_zero\"),btn_get_state=document.getElementById(\"btn_get_state\"),btn_start_svg=document.getElementById(\"btn_start_svg\"),btn_load_svg=document.getElementById(\"btn_load_svg\"),btn_reset_svg=document.getElementById(\"btn_reset_svg\"),prec_mult=100,x_max=450,y_max=280,path_step=2,coordinatesX=[],coordinatesY=[];function configJSON(t,e,n){console.log(\"converting coordinates: \"+t);for(var o,s={bx:\"{}\",by:\"{}\",d:String(e),cb:String(!1),zero:String(n)},a=\"{\",i=\"{\",r=/\\(\\s?(-?\\d+)\\s?,\\s?(-?\\d+)\\s?\\)/g;o=r.exec(t);)a+=o[1]+\",\",i+=o[2]+\",\";return s.bx=a+\"}\",s.by=i+\"}\",s}function configJSON_XY(t,e,n,o){console.log(\"converting coordinates\");var s={bx:\"{}\",by:\"{}\",d:String(n),cb:String(!1),zero:String(o)};return s.bx=\"{\"+t+\",}\",s.by=\"{\"+e+\",}\",s}function postConfig(t){console.log(\"Posting config\"),console.log(t);var e=\"config=\"+JSON.stringify(t);console.log(e);var n=new XMLHttpRequest;n.onreadystatechange=function(){if(4==this.readyState&&200==this.status){var e=n.responseText;console.log(e),last_config=t,document.getElementById(\"last_config\").innerText=JSON.stringify(last_config)}},n.open(\"POST\",\"/set_config\",!0),n.send(e)}function getState(){console.log(\"Getting state\");var t=new XMLHttpRequest;t.onreadystatechange=function(){if(4==this.readyState&&200==this.status){console.log(\"Receieved new state\");var e=t.responseText;console.log(e),last_state=e,document.getElementById(\"last_state\").innerText=JSON.stringify(last_state)}},t.open(\"GET\",\"/get_state\",!0),t.send()}function convert_svg(){var t=input_svg();if(0!==t)read_svg(t)}btn_start.addEventListener(\"click\",function(){postConfig(configJSON(document.getElementById(\"input_coorinate\").value,!0,!1))}),btn_start_svg.addEventListener(\"click\",function(){postConfig(configJSON_XY(coordinatesX,coordinatesY,!0,!1))}),btn_load_svg.addEventListener(\"click\",function(){convert_svg()}),btn_stop.addEventListener(\"click\",function(){postConfig(configJSON(\"\",!1,!1))}),btn_zero.addEventListener(\"click\",function(){postConfig(configJSON(\"\",!1,!0))}),btn_get_state.addEventListener(\"click\",function(){postConfig(getState())});var svgfile_input=document.getElementById(\"svgfile\");function input_svg(){var t=document.getElementById(\"svgfile\");return\"files\"in t&&t.files.length>=0?t.files[0]:0}function read_svg(t){var e=document.getElementById(\"svg_container\"),n=new FileReader;return n.onload=function(){var t=n.result;e.innerHTML=t;var o=e.getElementsByTagName(\"svg\")[0];console.log(o),o.style.border=\"1px solid\",o.id=\"svg_obj\",o.setAttribute(\"viewBox\",\"-\"+x_max+\" -\"+y_max+\" \"+2*x_max+\" \"+2*y_max),o.setAttribute(\"width\",2*x_max),o.setAttribute(\"height\",2*y_max),e.innerHTML=o.outerHTML,svg_to_coord(o),draw_canvas(coordinatesX,coordinatesY,\"svg_canvas\"),display_coords(coordinatesX,coordinatesY),btn_start_svg.disabled=!1,document.getElementById(\"coordinate_display\").hidden=!1},n.readAsText(t),btn_reset_svg.disabled=!1,svg_obj}function svg_to_coord(t){console.log(String(t)),console.log(t);var e=document.getElementsByTagName(\"path\");console.log(String(e)+\" \"+String(e[0])),console.log(e),console.log(e[0]);var n=Number(document.getElementById(\"dist_btwn\").value),o=Number(document.getElementById(\"svg_scale\").value);for(console.log(\"path step: \"+String(n)+\", path scale: \"+String(o)),m=0;m<e.length;m++){var s,a=e[m].getTotalLength(),i=x_max,r=y_max,c=-x_max,g=-y_max;for(console.log(\"length = \"+a),s=0;s<a;s+=n){var d=e[m].getPointAtLength(s),l=d.x,_=-d.y;coordinatesX.push(l),coordinatesY.push(_),l<i?i=l:l>c?c=l:_<r?r=_:_>g&&(g=_)}}for(var u=(c-i)/2,v=(g-r)/2,m=0;m<coordinatesX.length;m++)coordinatesX[m]=Math.round((coordinatesX[m]-u)*o),coordinatesY[m]=Math.round((coordinatesY[m]+v)*o)}function display_coords(t,e){var n=document.getElementById(\"x_list\"),o=document.getElementById(\"y_list\"),s=document.getElementById(\"num_coords\");n.innerText=\"X: \"+t,o.innerText=\"Y: \"+e,s.innerText=\"Number of coordinates: \"+t.length}function draw_canvas_str(t,e,n){draw_canvas(t.split(\",\"),e.split(\",\"),n)}function draw_canvas(t,e,n){var o,s=document.getElementById(n),a=s.getContext(\"2d\");for(a.strokeStyle=\"#C5C8C6\",a.translate(s.width/2,s.height/2),a.rotate(Math.PI),a.scale(-.75,.75),o=0;o<t.length-1;o++)a.moveTo(t[o],e[o]),a.lineTo(t[o+1],e[o+1]),a.stroke()}svgfile_input.onchange=function(t){btn_load_svg.disabled=!1};</script></body></html>"
#define INDEX_SIZE sizeof(INDEX_LITERAL)


char * indexHTML() {
  static char * index_buffer = INDEX_LITERAL;
  return index_buffer;
}


#endif
